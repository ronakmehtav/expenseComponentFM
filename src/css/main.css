.attribution {
  font-size: 11px;
  text-align: center;
}
.attribution a {
  color: hsl(228, 45%, 44%);
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd,
hr {
  margin: 0;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

.flow > * + * {
  margin-block-start: var(--flow-space, 1rem);
}

.flow--small > * + * {
  margin-block-start: var(--flow-space, 0.5rem);
}
.flow > .visually-hidden:first-child + *,
.flow > * + .visually-hidden {
  margin-block-start: 0rem;
}

:focus {
  outline: 2px dashed currentColor;
  outline-offset: 0.125em;
}

.flex {
  display: flex;
  align-items: var(--align, center);
  justify-content: var(--justify, space-between);
  gap: var(--gap, 1rem);
}

.text__subdued {
  letter-spacing: -0.04em;
}

.align-right {
  text-align: end;
}

:root {
  --clr-cream: 27 66% 92%;
  --clr-cyan: 186 34% 60%;
  --clr-red-3: 9.84 69.57% 36.08%;
  --clr-gray: 28 10% 53%;
  --clr-white: 33 100% 98%;
  --clr-black: 25 47% 15%;
  --clr-bg: var(--clr-cream);
  --clr-info-text: var(--clr-white);
  --clr-info-bg: var(--clr-red-3);

  --sp-1: 1em;
}

hr {
  border-width: 0.05em;
  border-style: solid;
  border-color: var(--clr-cream);
  border-radius: 1vw;
}

body {
  padding: 1rem;
  font-family: 'DM Sans', sans-serif;
  font-weight: 400;
  font-size: 1.125rem;
  background-color: hsl(var(--clr-bg));
}

main {
  margin: auto;
  width: fit-content;
}

.largeText {
  line-height: 1.1;
  font-size: 1.5em;
  letter-spacing: 0.02rem;
}

.infoCard {
  background-color: hsl(var(--clr-info-bg));
  color: hsl(var(--clr-info-text));
  padding: var(--sp-1);
  border-radius: var(--sp-1); /*want the border radius as padding*/
}

.infoCard a {
  color: inherit;
}

.chart-dashboard {
  background-color: hsl(var(--clr-white));
  padding: var(--sp-1);
  border-radius: var(--sp-1);
  color: hsl(var(--clr-black));
}
.chart__collection {
  --pop-up-height: 2rem;
  padding-top: var(--pop-up-height);
  --align: end;
}
.chartBlock__container {
  display: grid;
  justify-items: center;
}

.chartBlock {
  background-color: hsl(var(--chartbg));
  height: var(--chartHeight, 3rem);
  width: var(--chartwidth, 2rem);
  position: relative;
}

.chartBlock[data-max='true'] {
  --chartbg: var(--clr-cyan);
}

.chartBlock[data-max='false'] {
  --chartbg: var(--clr-red-3);
}

.chartBlock:hover {
  background-color: hsl(var(--chartbg) / 0.6);
}

.chartBlock:hover::before {
  content: attr(data-value);
  position: absolute;
  height: var(--pop-up-height);
  top: 0%;
  color: hsl(var(--clr-white));
  background: hsl(var(--clr-black));
  padding: 0.25rem;
  transform: translate(-25%, -125%);
}
@media (min-width: 30rem) {
  body {
    display: grid;
    place-content: center;
  }
}
